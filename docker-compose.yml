services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports: [ "9092:9092" ]
    depends_on: [ zookeeper ]
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

#  ksqldb-server:
#    image: confluentinc/ksqldb-server:0.29.0
#    platform: linux/amd64
#    depends_on:
#      - kafka
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#    networks:
#      - kafka-net
#
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.29.0
#    platform: linux/amd64
#    depends_on:
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#    networks:
#      - kafka-net

  akhq:
    image: tchiotludo/akhq
    ports: [ "8089:8080" ]
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            my-cluster:
              properties:
                bootstrap.servers: "kafka:29092"
    networks:
          - kafka-net
networks:
  kafka-net:
